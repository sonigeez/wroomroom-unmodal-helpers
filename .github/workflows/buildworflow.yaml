name: Electron Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install
      - name: Install subfolder deps
        run: |
          cd wroomroom-unmodal
          npm install 
          cd ..

      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y wine64 wine32

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
# name: Build/release

# on: push

# jobs:
#   release:
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         os: [macos-latest, ubuntu-latest, windows-latest]

#     steps:
#       - name: Check out Git repository
#         uses: actions/checkout@v1

#       - name: Install Node.js, NPM and Yarn
#         uses: actions/setup-node@v1
#         with:
#           node-version: 10
#       - name: Install subfolder deps
#         run: |
#           cd wroomroom-unmodal
#           npm install
#           cd ..

# - name: Build/release Electron app
#   uses: samuelmeuli/action-electron-builder@v1
#   with:
#     # GitHub token, automatically provided to the action
#     # (No need to define this secret in the repo settings)
#     github_token: ${{ secrets.GH_TOKEN }}

#     # If the commit is tagged with a version (e.g. "v1.0.0"),
#     # release the app after building
#     release: ${{ startsWith(github.ref, 'refs/tags/v') }}
